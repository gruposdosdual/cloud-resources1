name: Deploy Chat App

on:
  push:
    branches:
    - dev

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.0.0

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token : ${{secrets.AWS_SESSION_TOKEN}}
          aws-region: eu-west-1  # Cambia esto a tu región deseada

    - name: Initialize Terraform
      run: terraform init

    - name: Validate Terraform configuration
      run: terraform validate

    - name: Destroy Terraform state
      if: always()
      run: terraform destroy --auto-approve

    - name: Set up Terraform
      run: |
       cd chat_app/terraform

    - name: Plan Terraform
      run: terraform plan

    - name: Apply Terraform
      run: terraform apply -auto-approve

  docker:
    runs-on: ubuntu-latest
    needs: terraform
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker
        uses: docker/setup-buildx-action@v1

      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region eu-west-1 --profile 248189943700_EKS-alumnos | docker login --username AWS --password-stdin 248189943700.dkr.ecr.eu-west-1.amazonaws.com/chat-app-repo

      - name: Build Docker image
        run: docker build -t 248189943700.dkr.ecr.eu-west-1.amazonaws.com/chat-app-repo:latest .

      - name: Push Docker image to ECR
        run: docker push 248189943700.dkr.ecr.eu-west-1.amazonaws.com/chat-app-repo:latest


  deploy_k8s:
    runs-on: ubuntu-latest
    needs: docker

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-session-token : ${{secrets.AWS_SESSION_TOKEN}}
        aws-region: eu-west-1  # Cambia esto a tu región deseada

    
    - name: Configure kubectl
      run: |
          aws eks --region eu-west-1 --profile 248189943700_EKS-alumnos update-kubeconfig --name chat-app-cluster        
      

    - name: Update kubeconfig
      run: |
          aws eks update-kubeconfig --name chat-app-cluster --region eu-west-1 --profile 248189943700_EKS-alumnos  

    - name: Deploy to Kubernetes
      run: |
        cd k8s    
        kubectl apply -f chat-app-deployment.yaml  
        kubectl apply -f chat-app-service.yaml
        
